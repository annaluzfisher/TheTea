{"ast":null,"code":"const ADD_SHARE = \"ADD_SHARE\";\nconst LOAD_SHARE = \"LOAD_SHARE\";\nconst RANDOM_SHARE = \"RANDOM_SHARE\";\nexport const addShare = share => ({\n  type: ADD_SHARE,\n  share\n});\nexport const loadShare = share_id => ({\n  type: LOAD_SHARE,\n  share_id\n});\nexport const randomShare = share => ({\n  type: RANDOM_SHARE,\n  share\n});\nexport const getShare = share_id => async dispatch => {\n  const response = await fetch(`/api/shares/${share_id}`);\n\n  if (response.ok) {\n    const share = await response.json();\n    dispatch(loadShare(share));\n  }\n};\nexport const getRandomShare = () => async dispatch => {\n  console.log('before the fetch');\n  const response = await fetch(\"/api/shares/random\");\n  const share = await response.json();\n  console.log(\"inthe action\", share);\n\n  if (response.ok) {\n    const share = await response.json();\n    dispatch(randomShare(share));\n  }\n};\nexport const createShare = data => async dispatch => {\n  //need to handle default user in the back end in controller\n  console.log(\"in create shares:\", data);\n  const response = await fetch(`/api/shares`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      accept: \"application/json\"\n    },\n    body: JSON.stringify(data)\n  });\n\n  if (response.ok) {\n    const newShare = await response.json();\n    dispatch(addShare(newShare));\n  }\n};\nlet initialState = {};\nexport default function shareReducer() {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  const newState = { ...state\n  };\n  console.log(\"in reducer\", action);\n\n  switch (action.type) {\n    case ADD_SHARE:\n    case LOAD_SHARE:\n      //coming in with share id from back end\n      const newShare = {\n        [action.share_id]: action.share\n      }; //how do i have access to share when i'm not sending it back?\n\n      return { ...newState,\n        ...newShare\n      };\n\n    case RANDOM_SHARE:\n      console.log(\"action\", action);\n      console.log(\"action.share\", action.share);\n      return { ...newState,\n        ...action.share\n      };\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"names":["ADD_SHARE","LOAD_SHARE","RANDOM_SHARE","addShare","share","type","loadShare","share_id","randomShare","getShare","dispatch","response","fetch","ok","json","getRandomShare","console","log","createShare","data","method","headers","accept","body","JSON","stringify","newShare","initialState","shareReducer","state","action","newState"],"sources":["/Users/postgres/Desktop/Tea/teafrontend/src/store/share.js"],"sourcesContent":["\nconst ADD_SHARE = \"ADD_SHARE\";\nconst LOAD_SHARE = \"LOAD_SHARE\";\nconst RANDOM_SHARE = \"RANDOM_SHARE\";\n\nexport const addShare = (share) => ({\n  type: ADD_SHARE,\n  share,\n});\n\nexport const loadShare = (share_id) => ({\n  type: LOAD_SHARE,\n  share_id,\n});\n\nexport const randomShare = (share) => ({\n  type: RANDOM_SHARE,\n  share\n});\n\nexport const getShare = (share_id) => async (dispatch) => {\n  const response = await fetch(`/api/shares/${share_id}`);\n  if (response.ok) {\n    const share = await response.json();\n    dispatch(loadShare(share));\n  }\n};\n\nexport const getRandomShare = () => async (dispatch) => {\n  console.log('before the fetch')\n  const response = await fetch(\"/api/shares/random\");\n  const share = await response.json();\n  console.log(\"inthe action\", share);\n  if (response.ok) {\n    const share = await response.json();\n    dispatch(randomShare(share));\n  }\n};\n\nexport const createShare = (data) => async (dispatch) => {\n  //need to handle default user in the back end in controller\n  console.log(\"in create shares:\", data);\n  const response = await fetch(`/api/shares`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      accept: \"application/json\",\n    },\n    body: JSON.stringify(data),\n  });\n  if (response.ok) {\n    const newShare = await response.json();\n    dispatch(addShare(newShare));\n  }\n};\n\nlet initialState = {};\n\nexport default function shareReducer(state = initialState, action) {\n  const newState = { ...state };\n  console.log(\"in reducer\", action);\n  switch (action.type) {\n    case ADD_SHARE:\n    case LOAD_SHARE: //coming in with share id from back end\n      const newShare = { [action.share_id]: action.share }; //how do i have access to share when i'm not sending it back?\n      return { ...newState, ...newShare };\n    case RANDOM_SHARE:\n      console.log(\"action\", action);\n      console.log(\"action.share\", action.share);\n      return { ...newState, ...action.share };\n    default:\n      return state;\n  }\n}\n"],"mappings":"AACA,MAAMA,SAAS,GAAG,WAAlB;AACA,MAAMC,UAAU,GAAG,YAAnB;AACA,MAAMC,YAAY,GAAG,cAArB;AAEA,OAAO,MAAMC,QAAQ,GAAIC,KAAD,KAAY;EAClCC,IAAI,EAAEL,SAD4B;EAElCI;AAFkC,CAAZ,CAAjB;AAKP,OAAO,MAAME,SAAS,GAAIC,QAAD,KAAe;EACtCF,IAAI,EAAEJ,UADgC;EAEtCM;AAFsC,CAAf,CAAlB;AAKP,OAAO,MAAMC,WAAW,GAAIJ,KAAD,KAAY;EACrCC,IAAI,EAAEH,YAD+B;EAErCE;AAFqC,CAAZ,CAApB;AAKP,OAAO,MAAMK,QAAQ,GAAIF,QAAD,IAAc,MAAOG,QAAP,IAAoB;EACxD,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,eAAcL,QAAS,EAAzB,CAA5B;;EACA,IAAII,QAAQ,CAACE,EAAb,EAAiB;IACf,MAAMT,KAAK,GAAG,MAAMO,QAAQ,CAACG,IAAT,EAApB;IACAJ,QAAQ,CAACJ,SAAS,CAACF,KAAD,CAAV,CAAR;EACD;AACF,CANM;AAQP,OAAO,MAAMW,cAAc,GAAG,MAAM,MAAOL,QAAP,IAAoB;EACtDM,OAAO,CAACC,GAAR,CAAY,kBAAZ;EACA,MAAMN,QAAQ,GAAG,MAAMC,KAAK,CAAC,oBAAD,CAA5B;EACA,MAAMR,KAAK,GAAG,MAAMO,QAAQ,CAACG,IAAT,EAApB;EACAE,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4Bb,KAA5B;;EACA,IAAIO,QAAQ,CAACE,EAAb,EAAiB;IACf,MAAMT,KAAK,GAAG,MAAMO,QAAQ,CAACG,IAAT,EAApB;IACAJ,QAAQ,CAACF,WAAW,CAACJ,KAAD,CAAZ,CAAR;EACD;AACF,CATM;AAWP,OAAO,MAAMc,WAAW,GAAIC,IAAD,IAAU,MAAOT,QAAP,IAAoB;EACvD;EACAM,OAAO,CAACC,GAAR,CAAY,mBAAZ,EAAiCE,IAAjC;EACA,MAAMR,QAAQ,GAAG,MAAMC,KAAK,CAAE,aAAF,EAAgB;IAC1CQ,MAAM,EAAE,MADkC;IAE1CC,OAAO,EAAE;MACP,gBAAgB,kBADT;MAEPC,MAAM,EAAE;IAFD,CAFiC;IAM1CC,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeN,IAAf;EANoC,CAAhB,CAA5B;;EAQA,IAAIR,QAAQ,CAACE,EAAb,EAAiB;IACf,MAAMa,QAAQ,GAAG,MAAMf,QAAQ,CAACG,IAAT,EAAvB;IACAJ,QAAQ,CAACP,QAAQ,CAACuB,QAAD,CAAT,CAAR;EACD;AACF,CAfM;AAiBP,IAAIC,YAAY,GAAG,EAAnB;AAEA,eAAe,SAASC,YAAT,GAAoD;EAAA,IAA9BC,KAA8B,uEAAtBF,YAAsB;EAAA,IAARG,MAAQ;EACjE,MAAMC,QAAQ,GAAG,EAAE,GAAGF;EAAL,CAAjB;EACAb,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0Ba,MAA1B;;EACA,QAAQA,MAAM,CAACzB,IAAf;IACE,KAAKL,SAAL;IACA,KAAKC,UAAL;MAAiB;MACf,MAAMyB,QAAQ,GAAG;QAAE,CAACI,MAAM,CAACvB,QAAR,GAAmBuB,MAAM,CAAC1B;MAA5B,CAAjB,CADF,CACwD;;MACtD,OAAO,EAAE,GAAG2B,QAAL;QAAe,GAAGL;MAAlB,CAAP;;IACF,KAAKxB,YAAL;MACEc,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBa,MAAtB;MACAd,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4Ba,MAAM,CAAC1B,KAAnC;MACA,OAAO,EAAE,GAAG2B,QAAL;QAAe,GAAGD,MAAM,CAAC1B;MAAzB,CAAP;;IACF;MACE,OAAOyB,KAAP;EAVJ;AAYD"},"metadata":{},"sourceType":"module"}