{"ast":null,"code":"import { createStore, combineReducers, applyMiddleware, compose } from 'redux';\nimport shareReducer from './share';\nimport thunk from 'redux-thunk';\nimport { sessionReducer } from './sessionReducer'; // import { logger }from \"redux-logger\";\n\nconst rootReducer = combineReducers({\n  share: shareReducer,\n  session: sessionReducer\n}); // let enhancer;\n// if (process.env.NODE_ENV === \"production\") {\n//   enhancer = applyMiddleware(thunk);\n// } else {\n//   const logger = require(\"redux-logger\").default;\n//   const composeEnhancers =\n//     window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n//   enhancer = composeEnhancers(applyMiddleware(thunk, logger));\n// }\n\nconst configureStore = preloadedState => {\n  console.log(\"we configuring the store?\");\n  console.log(thunk);\n  return createStore(rootReducer, preloadedState, applyMiddleware(thunk));\n};\n\nexport default configureStore;","map":{"version":3,"names":["createStore","combineReducers","applyMiddleware","compose","shareReducer","thunk","sessionReducer","rootReducer","share","session","configureStore","preloadedState","console","log"],"sources":["/Users/postgres/Desktop/Tea/teafrontend/src/store/index.js"],"sourcesContent":["import { createStore, combineReducers, applyMiddleware, compose } from 'redux'\nimport  shareReducer  from './share';\nimport  thunk from 'redux-thunk';\nimport { sessionReducer } from './sessionReducer';\n// import { logger }from \"redux-logger\";\n\n\nconst rootReducer = combineReducers ({\n  share: shareReducer,\n  session: sessionReducer,\n})\n\n\n\n// let enhancer;\n\n// if (process.env.NODE_ENV === \"production\") {\n//   enhancer = applyMiddleware(thunk);\n// } else {\n//   const logger = require(\"redux-logger\").default;\n//   const composeEnhancers =\n//     window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n//   enhancer = composeEnhancers(applyMiddleware(thunk, logger));\n// }\n\nconst configureStore = (preloadedState) => {\n  console.log(\"we configuring the store?\")\n  console.log(thunk)\n  return createStore(rootReducer, preloadedState,applyMiddleware(thunk))\n};\n\nexport default configureStore;\n"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,eAAvC,EAAwDC,OAAxD,QAAuE,OAAvE;AACA,OAAQC,YAAR,MAA2B,SAA3B;AACA,OAAQC,KAAR,MAAmB,aAAnB;AACA,SAASC,cAAT,QAA+B,kBAA/B,C,CACA;;AAGA,MAAMC,WAAW,GAAGN,eAAe,CAAE;EACnCO,KAAK,EAAEJ,YAD4B;EAEnCK,OAAO,EAAEH;AAF0B,CAAF,CAAnC,C,CAOA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMI,cAAc,GAAIC,cAAD,IAAoB;EACzCC,OAAO,CAACC,GAAR,CAAY,2BAAZ;EACAD,OAAO,CAACC,GAAR,CAAYR,KAAZ;EACA,OAAOL,WAAW,CAACO,WAAD,EAAcI,cAAd,EAA6BT,eAAe,CAACG,KAAD,CAA5C,CAAlB;AACD,CAJD;;AAMA,eAAeK,cAAf"},"metadata":{},"sourceType":"module"}