{"ast":null,"code":"import _slicedToArray from\"/Users/postgres/Desktop/Tea/teafrontend/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{React,useState,useEffect}from\"react\";import{useSelector,useDispatch}from\"react-redux\";import{useParams,useLocation}from\"react-router-dom\";import\"./Form.css\";import{createUser}from'../../store/user';import{loginUser}from\"../../store/sessionReducer\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function Form(props){var type=props.location.state.type;var dispatch=useDispatch();var _useState=useState(\"\"),_useState2=_slicedToArray(_useState,2),password=_useState2[0],setPassword=_useState2[1];var _useState3=useState(\"\"),_useState4=_slicedToArray(_useState3,2),email=_useState4[0],setEmail=_useState4[1];var _useState5=useState(\"\"),_useState6=_slicedToArray(_useState5,2),username=_useState6[0],setUsername=_useState6[1];var _useState7=useState({}),_useState8=_slicedToArray(_useState7,2),user=_useState8[0],setUser=_useState8[1];useEffect(function(){setUser({username:username,email:email,password:password});},[username,email,password]);var handleSubmit=function handleSubmit(e){e.preventDefault();if(type==='Sign Up'){dispatch(createUser(user));}else{dispatch(loginUser(user));}setEmail('');setUser('');setPassword('');setUsername('');};return/*#__PURE__*/_jsx(\"div\",{className:\"user-form-wrapper\",children:/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"username...\",value:username,onChange:function onChange(e){return setUsername(e.target.value);}}),type==='Sign Up'&&/*#__PURE__*/_jsx(\"input\",{type:\"email\",placeholder:\"your_email@internet.com...\",value:email,onChange:function onChange(e){return setEmail(e.target.value);}}),/*#__PURE__*/_jsx(\"input\",{type:\"password\",placeholder:\"password...\",value:password,onChange:function onChange(e){return setPassword(e.target.value);}}),/*#__PURE__*/_jsx(\"input\",{type:\"submit\",value:type})]})});}export default Form;// flow: make a local state of user with the user inputs (also local state)\n//on submit make that user and check if credentials match aka\n//fetch a get to back end to see if user? or to start a new session??\n//both?\n// if response ok then we useSelector to set the global state session to ...  the user?\n// do we have a current user slice of state or is that in session??\n// need to import correstpond action reaters into componeney\n// diffeent if log in user vs sing up \\user  vs whatever\n//even theough they might go in to reducer the same \n// need to make user reducer which just has create and delete.\n// may not need users lice of state if just need current user mno need look at profiles \n// ask about logger\n//what does useParams return when not a wildcard?\n//how to pass props through nav links\n//what is location/history","map":{"version":3,"names":["React","useState","useEffect","useSelector","useDispatch","useParams","useLocation","createUser","loginUser","Form","props","type","location","state","dispatch","password","setPassword","email","setEmail","username","setUsername","user","setUser","handleSubmit","e","preventDefault","target","value"],"sources":["/Users/postgres/Desktop/Tea/teafrontend/src/components/Form/Form.js"],"sourcesContent":["import { React, useState, useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useParams, useLocation } from \"react-router-dom\";\nimport \"./Form.css\";\nimport { createUser } from '../../store/user'\nimport { loginUser } from \"../../store/sessionReducer\";\n\nfunction Form(props) {\n  const type = props.location.state.type\n\n  const dispatch = useDispatch();\n\n  const [password, setPassword] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [username, setUsername] = useState(\"\");\n  const [user, setUser ] = useState({});\n\n  useEffect (()=> {\n      setUser({username, email, password});\n  }, [username,email,password])\n\n  const handleSubmit =  (e) => {\n     e.preventDefault();\n  if (type === 'Sign Up'){ \n     dispatch(createUser(user));\n  }\n  else {\n    dispatch(loginUser(user));\n  }\n\n    setEmail('');\n    setUser('');\n    setPassword('');\n    setUsername('');\n  };\n\n  return (\n    <div className=\"user-form-wrapper\">\n      <form onSubmit={handleSubmit}>\n        <input\n          type=\"text\"\n          placeholder=\"username...\"\n          value={username}\n          onChange={(e) => setUsername(e.target.value)}\n        />\n        {(type === 'Sign Up') && \n        <input\n          type=\"email\"\n          placeholder=\"your_email@internet.com...\"\n          value={email}\n          onChange={(e) => setEmail(e.target.value)}\n        /> }\n        <input\n          type=\"password\"\n          placeholder=\"password...\"\n          value={password}\n          onChange={(e) => setPassword(e.target.value)}\n        />\n        <input  type=\"submit\" value={type} />\n      </form>\n    </div>\n  );\n}\n\nexport default Form;\n\n\n// flow: make a local state of user with the user inputs (also local state)\n//on submit make that user and check if credentials match aka\n//fetch a get to back end to see if user? or to start a new session??\n//both?\n// if response ok then we useSelector to set the global state session to ...  the user?\n// do we have a current user slice of state or is that in session??\n// need to import correstpond action reaters into componeney\n// diffeent if log in user vs sing up \\user  vs whatever\n\n//even theough they might go in to reducer the same \n// need to make user reducer which just has create and delete.\n// may not need users lice of state if just need current user mno need look at profiles \n// ask about logger\n\n//what does useParams return when not a wildcard?\n//how to pass props through nav links\n//what is location/history"],"mappings":"6HAAA,OAASA,KAAT,CAAgBC,QAAhB,CAA0BC,SAA1B,KAA2C,OAA3C,CACA,OAASC,WAAT,CAAsBC,WAAtB,KAAyC,aAAzC,CACA,OAASC,SAAT,CAAoBC,WAApB,KAAuC,kBAAvC,CACA,MAAO,YAAP,CACA,OAASC,UAAT,KAA2B,kBAA3B,CACA,OAASC,SAAT,KAA0B,4BAA1B,C,wFAEA,QAASC,KAAT,CAAcC,KAAd,CAAqB,CACnB,GAAMC,KAAI,CAAGD,KAAK,CAACE,QAAN,CAAeC,KAAf,CAAqBF,IAAlC,CAEA,GAAMG,SAAQ,CAAGV,WAAW,EAA5B,CAEA,cAAgCH,QAAQ,CAAC,EAAD,CAAxC,wCAAOc,QAAP,eAAiBC,WAAjB,eACA,eAA0Bf,QAAQ,CAAC,EAAD,CAAlC,yCAAOgB,KAAP,eAAcC,QAAd,eACA,eAAgCjB,QAAQ,CAAC,EAAD,CAAxC,yCAAOkB,QAAP,eAAiBC,WAAjB,eACA,eAAyBnB,QAAQ,CAAC,EAAD,CAAjC,yCAAOoB,IAAP,eAAaC,OAAb,eAEApB,SAAS,CAAE,UAAK,CACZoB,OAAO,CAAC,CAACH,QAAQ,CAARA,QAAD,CAAWF,KAAK,CAALA,KAAX,CAAkBF,QAAQ,CAARA,QAAlB,CAAD,CAAP,CACH,CAFQ,CAEN,CAACI,QAAD,CAAUF,KAAV,CAAgBF,QAAhB,CAFM,CAAT,CAIA,GAAMQ,aAAY,CAAI,QAAhBA,aAAgB,CAACC,CAAD,CAAO,CAC1BA,CAAC,CAACC,cAAF,GACH,GAAId,IAAI,GAAK,SAAb,CAAuB,CACpBG,QAAQ,CAACP,UAAU,CAACc,IAAD,CAAX,CAAR,CACF,CAFD,IAGK,CACHP,QAAQ,CAACN,SAAS,CAACa,IAAD,CAAV,CAAR,CACD,CAECH,QAAQ,CAAC,EAAD,CAAR,CACAI,OAAO,CAAC,EAAD,CAAP,CACAN,WAAW,CAAC,EAAD,CAAX,CACAI,WAAW,CAAC,EAAD,CAAX,CACD,CAbD,CAeA,mBACE,YAAK,SAAS,CAAC,mBAAf,uBACE,cAAM,QAAQ,CAAEG,YAAhB,wBACE,cACE,IAAI,CAAC,MADP,CAEE,WAAW,CAAC,aAFd,CAGE,KAAK,CAAEJ,QAHT,CAIE,QAAQ,CAAE,kBAACK,CAAD,QAAOJ,YAAW,CAACI,CAAC,CAACE,MAAF,CAASC,KAAV,CAAlB,EAJZ,EADF,CAOIhB,IAAI,GAAK,SAAV,eACD,cACE,IAAI,CAAC,OADP,CAEE,WAAW,CAAC,4BAFd,CAGE,KAAK,CAAEM,KAHT,CAIE,QAAQ,CAAE,kBAACO,CAAD,QAAON,SAAQ,CAACM,CAAC,CAACE,MAAF,CAASC,KAAV,CAAf,EAJZ,EARF,cAcE,cACE,IAAI,CAAC,UADP,CAEE,WAAW,CAAC,aAFd,CAGE,KAAK,CAAEZ,QAHT,CAIE,QAAQ,CAAE,kBAACS,CAAD,QAAOR,YAAW,CAACQ,CAAC,CAACE,MAAF,CAASC,KAAV,CAAlB,EAJZ,EAdF,cAoBE,cAAQ,IAAI,CAAC,QAAb,CAAsB,KAAK,CAAEhB,IAA7B,EApBF,GADF,EADF,CA0BD,CAED,cAAeF,KAAf,CAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA"},"metadata":{},"sourceType":"module"}