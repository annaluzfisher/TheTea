{"ast":null,"code":"import csrfFetch from \"./csrf\";\nconst RECEIVE_CURRENT_USER = 'users/RECEIVE_CURRENT_USER';\nconst REMOVE_CURRENT_USER = 'users/REMOVE_CURRENT_USER';\nexport const receiveCurrentUser = user => ({\n  type: RECEIVE_CURRENT_USER,\n  user\n});\nexport const removeCurrentUser = user => ({\n  type: REMOVE_CURRENT_USER,\n  user\n});\nexport const loginUser = user => async dispatch => {\n  let res = await csrfFetch('/api/session', {\n    method: 'POST',\n    body: JSON.stringify(user)\n  }).then(res => res.json()).then(res => dispatch(receiveCurrentUser(res))).catch(err => console.log(err));\n};\nexport const sessionReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  Object.freeze(state);\n  const newState = { ...state\n  };\n  console.log('up top', newState);\n\n  switch (action.type) {\n    case RECEIVE_CURRENT_USER:\n      return { ...newState,\n        ...action.user\n      };\n\n    case REMOVE_CURRENT_USER:\n      console.log(newState);\n      delete newState[action.user];\n      return { ...newState\n      };\n      return newState;\n\n    default:\n      return newState;\n  }\n};","map":{"version":3,"names":["csrfFetch","RECEIVE_CURRENT_USER","REMOVE_CURRENT_USER","receiveCurrentUser","user","type","removeCurrentUser","loginUser","dispatch","res","method","body","JSON","stringify","then","json","catch","err","console","log","sessionReducer","state","action","Object","freeze","newState"],"sources":["/Users/postgres/Desktop/Tea/teafrontend/src/store/sessionReducer.js"],"sourcesContent":["import csrfFetch from \"./csrf\";\n\nconst RECEIVE_CURRENT_USER = 'users/RECEIVE_CURRENT_USER'\nconst REMOVE_CURRENT_USER = 'users/REMOVE_CURRENT_USER'\n\nexport const receiveCurrentUser = user =>({\n  type: RECEIVE_CURRENT_USER,\n  user\n})\n\nexport const removeCurrentUser = (user) => ({\n  type: REMOVE_CURRENT_USER,\n  user\n});\n\n\nexport const loginUser =  (user) => async (dispatch) => {\n   let res = await csrfFetch('/api/session',{\n    method: 'POST',\n    body: JSON.stringify(user)\n   }).then((res) => res.json()).then((res) => dispatch(receiveCurrentUser(res)))\n   .catch((err) => console.log(err));\n}\n\n\nexport const sessionReducer = (state = {}, action) => {\n  Object.freeze(state);\n  const newState = { ...state }\n  console.log('up top', newState)\n  switch (action.type) {\n    case RECEIVE_CURRENT_USER:\n    return {...newState,...action.user}\n    case REMOVE_CURRENT_USER:\n   console.log(newState); \n   \n    delete newState[action.user]\n    return {...newState}\n    return newState\n    default:\n      return newState;\n  }\n}"],"mappings":"AAAA,OAAOA,SAAP,MAAsB,QAAtB;AAEA,MAAMC,oBAAoB,GAAG,4BAA7B;AACA,MAAMC,mBAAmB,GAAG,2BAA5B;AAEA,OAAO,MAAMC,kBAAkB,GAAGC,IAAI,KAAI;EACxCC,IAAI,EAAEJ,oBADkC;EAExCG;AAFwC,CAAJ,CAA/B;AAKP,OAAO,MAAME,iBAAiB,GAAIF,IAAD,KAAW;EAC1CC,IAAI,EAAEH,mBADoC;EAE1CE;AAF0C,CAAX,CAA1B;AAMP,OAAO,MAAMG,SAAS,GAAKH,IAAD,IAAU,MAAOI,QAAP,IAAoB;EACrD,IAAIC,GAAG,GAAG,MAAMT,SAAS,CAAC,cAAD,EAAgB;IACxCU,MAAM,EAAE,MADgC;IAExCC,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeT,IAAf;EAFkC,CAAhB,CAAT,CAGbU,IAHa,CAGPL,GAAD,IAASA,GAAG,CAACM,IAAJ,EAHD,EAGaD,IAHb,CAGmBL,GAAD,IAASD,QAAQ,CAACL,kBAAkB,CAACM,GAAD,CAAnB,CAHnC,EAIfO,KAJe,CAIRC,GAAD,IAASC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAJA,CAAhB;AAKF,CANM;AASP,OAAO,MAAMG,cAAc,GAAG,YAAwB;EAAA,IAAvBC,KAAuB,uEAAf,EAAe;EAAA,IAAXC,MAAW;EACpDC,MAAM,CAACC,MAAP,CAAcH,KAAd;EACA,MAAMI,QAAQ,GAAG,EAAE,GAAGJ;EAAL,CAAjB;EACAH,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBM,QAAtB;;EACA,QAAQH,MAAM,CAACjB,IAAf;IACE,KAAKJ,oBAAL;MACA,OAAO,EAAC,GAAGwB,QAAJ;QAAa,GAAGH,MAAM,CAAClB;MAAvB,CAAP;;IACA,KAAKF,mBAAL;MACDgB,OAAO,CAACC,GAAR,CAAYM,QAAZ;MAEC,OAAOA,QAAQ,CAACH,MAAM,CAAClB,IAAR,CAAf;MACA,OAAO,EAAC,GAAGqB;MAAJ,CAAP;MACA,OAAOA,QAAP;;IACA;MACE,OAAOA,QAAP;EAVJ;AAYD,CAhBM"},"metadata":{},"sourceType":"module"}