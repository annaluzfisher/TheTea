{"ast":null,"code":"const ADD_SHARE = \"ADD_SHARE\";\nconst LOAD_SHARE = 'LOAD_SHARE';\nconst RANDOM_SHARE = 'RANDOM_SHARE';\nexport const addShare = share => ({\n  type: ADD_SHARE,\n  share\n});\nexport const loadShare = share_id => ({\n  type: LOAD_SHARE,\n  share_id\n});\nexport const randomShare = () => ({\n  type: RANDOM_SHARE\n});\nexport const getShare = share_id => async dispatch => {\n  const response = await fetch(`/api/shares/${share_id}`);\n\n  if (response.ok) {\n    const share = await response.json();\n    dispatch(loadShare(share_id));\n  }\n};\nexport const getRandomShare = () => async dispatch => {\n  const response = await fetch(`/api/shares/random`);\n\n  if (response.ok) {\n    const share = await response.json();\n    dispatch(randomShare(share));\n  }\n};\nexport const createShare = data => async dispatch => {\n  //need to handle default user in the back end in controller\n  console.log('in create shares:', data);\n  const response = await fetch(`/api/shares`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": 'application/json',\n      \"accept\": \"application/json\"\n    },\n    body: JSON.stringify(data)\n  });\n\n  if (response.ok) {\n    const newShare = await response.json();\n    console.log('newShare in createshares', newShare);\n    dispatch(addShare(newShare));\n  }\n};\nlet initialState = {};\nexport default function shareReducer() {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  const newState = { ...state\n  };\n\n  switch (action.type) {\n    case ADD_SHARE:\n    case LOAD_SHARE:\n      //coming in with share id from back end\n      const newShare = {\n        [action.share_id]: action.share\n      }; //how do i have access to share when i'm not sending it back?\n\n      return { ...newState,\n        ...newShare\n      };\n\n    case RANDOM_SHARE:\n      console.log('action', action);\n      console.log('action.share', action.share);\n      return { ...newState,\n        ...action.share\n      };\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"names":["ADD_SHARE","LOAD_SHARE","RANDOM_SHARE","addShare","share","type","loadShare","share_id","randomShare","getShare","dispatch","response","fetch","ok","json","getRandomShare","createShare","data","console","log","method","headers","body","JSON","stringify","newShare","initialState","shareReducer","state","action","newState"],"sources":["/Users/postgres/Desktop/Tea/teafrontend/src/store/share.js"],"sourcesContent":["const ADD_SHARE = \"ADD_SHARE\";\nconst LOAD_SHARE = 'LOAD_SHARE';\nconst RANDOM_SHARE = 'RANDOM_SHARE';\n\nexport const addShare = (share) => ({\n  type: ADD_SHARE,\n  share,\n});\n\nexport const loadShare = (share_id) =>({\n  type: LOAD_SHARE,\n  share_id\n})\n\nexport const randomShare =() => ({\n  type: RANDOM_SHARE,\n})\n\nexport const getShare = (share_id) => async (dispatch) => {\n  const response = await fetch(`/api/shares/${share_id}`);\n  if (response.ok) {\n    const share = await response.json();\n    dispatch(loadShare(share_id));\n  }\n}\n\nexport const getRandomShare = () => async (dispatch) => {\n  const response = await fetch(`/api/shares/random`);\n  if (response.ok) {\n    const share = await response.json();\n    dispatch(randomShare(share));\n  }\n};\n\nexport const createShare = (data) => async (dispatch) => { //need to handle default user in the back end in controller\n  console.log('in create shares:', data)\n  const response = await fetch(`/api/shares`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": 'application/json',\n      \"accept\" : \"application/json\"\n    },\n    body: JSON.stringify(data)\n  })\n  if (response.ok) {\n    const newShare = await response.json();\n    console.log('newShare in createshares', newShare)\n    dispatch(addShare(newShare));\n  }\n}\n\n let initialState = {};\n\n\nexport default function shareReducer(state = initialState, action) {\n  const newState = { ...state };\n  switch (action.type) {\n    case ADD_SHARE:\n    case LOAD_SHARE:   //coming in with share id from back end\n    const newShare = {[action.share_id]: action.share}  //how do i have access to share when i'm not sending it back?\n    return {...newState,...newShare}\n    case RANDOM_SHARE:\n      console.log('action', action)\n      console.log('action.share', action.share)\n      return{...newState,...action.share}\n    default:\n      return state;\n  }\n}\n"],"mappings":"AAAA,MAAMA,SAAS,GAAG,WAAlB;AACA,MAAMC,UAAU,GAAG,YAAnB;AACA,MAAMC,YAAY,GAAG,cAArB;AAEA,OAAO,MAAMC,QAAQ,GAAIC,KAAD,KAAY;EAClCC,IAAI,EAAEL,SAD4B;EAElCI;AAFkC,CAAZ,CAAjB;AAKP,OAAO,MAAME,SAAS,GAAIC,QAAD,KAAc;EACrCF,IAAI,EAAEJ,UAD+B;EAErCM;AAFqC,CAAd,CAAlB;AAKP,OAAO,MAAMC,WAAW,GAAE,OAAO;EAC/BH,IAAI,EAAEH;AADyB,CAAP,CAAnB;AAIP,OAAO,MAAMO,QAAQ,GAAIF,QAAD,IAAc,MAAOG,QAAP,IAAoB;EACxD,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,eAAcL,QAAS,EAAzB,CAA5B;;EACA,IAAII,QAAQ,CAACE,EAAb,EAAiB;IACf,MAAMT,KAAK,GAAG,MAAMO,QAAQ,CAACG,IAAT,EAApB;IACAJ,QAAQ,CAACJ,SAAS,CAACC,QAAD,CAAV,CAAR;EACD;AACF,CANM;AAQP,OAAO,MAAMQ,cAAc,GAAG,MAAM,MAAOL,QAAP,IAAoB;EACtD,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,oBAAF,CAA5B;;EACA,IAAID,QAAQ,CAACE,EAAb,EAAiB;IACf,MAAMT,KAAK,GAAG,MAAMO,QAAQ,CAACG,IAAT,EAApB;IACAJ,QAAQ,CAACF,WAAW,CAACJ,KAAD,CAAZ,CAAR;EACD;AACF,CANM;AAQP,OAAO,MAAMY,WAAW,GAAIC,IAAD,IAAU,MAAOP,QAAP,IAAoB;EAAE;EACzDQ,OAAO,CAACC,GAAR,CAAY,mBAAZ,EAAiCF,IAAjC;EACA,MAAMN,QAAQ,GAAG,MAAMC,KAAK,CAAE,aAAF,EAAgB;IAC1CQ,MAAM,EAAE,MADkC;IAE1CC,OAAO,EAAE;MACP,gBAAgB,kBADT;MAEP,UAAW;IAFJ,CAFiC;IAM1CC,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeP,IAAf;EANoC,CAAhB,CAA5B;;EAQA,IAAIN,QAAQ,CAACE,EAAb,EAAiB;IACf,MAAMY,QAAQ,GAAG,MAAMd,QAAQ,CAACG,IAAT,EAAvB;IACAI,OAAO,CAACC,GAAR,CAAY,0BAAZ,EAAwCM,QAAxC;IACAf,QAAQ,CAACP,QAAQ,CAACsB,QAAD,CAAT,CAAR;EACD;AACF,CAfM;AAiBN,IAAIC,YAAY,GAAG,EAAnB;AAGD,eAAe,SAASC,YAAT,GAAoD;EAAA,IAA9BC,KAA8B,uEAAtBF,YAAsB;EAAA,IAARG,MAAQ;EACjE,MAAMC,QAAQ,GAAG,EAAE,GAAGF;EAAL,CAAjB;;EACA,QAAQC,MAAM,CAACxB,IAAf;IACE,KAAKL,SAAL;IACA,KAAKC,UAAL;MAAmB;MACnB,MAAMwB,QAAQ,GAAG;QAAC,CAACI,MAAM,CAACtB,QAAR,GAAmBsB,MAAM,CAACzB;MAA3B,CAAjB,CADA,CACoD;;MACpD,OAAO,EAAC,GAAG0B,QAAJ;QAAa,GAAGL;MAAhB,CAAP;;IACA,KAAKvB,YAAL;MACEgB,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBU,MAAtB;MACAX,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4BU,MAAM,CAACzB,KAAnC;MACA,OAAM,EAAC,GAAG0B,QAAJ;QAAa,GAAGD,MAAM,CAACzB;MAAvB,CAAN;;IACF;MACE,OAAOwB,KAAP;EAVJ;AAYD"},"metadata":{},"sourceType":"module"}