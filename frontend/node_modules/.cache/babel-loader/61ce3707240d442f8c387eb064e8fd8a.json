{"ast":null,"code":"import { createStore, combineReducers, applyMiddleware, compose } from 'redux';\nimport shareReducer from './share';\nimport thunk from 'redux-thunk';\nconst rootReducer = combineReducers({\n  share: shareReducer\n}); // let enhancer;\n// if (process.env.NODE_ENV === \"production\") {\n//   enhancer = applyMiddleware(thunk);\n// } else {\n//   const logger = require(\"redux-logger\").default;\n//   const composeEnhancers =\n//     window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n//   enhancer = composeEnhancers(applyMiddleware(thunk,logger));\n// }\n\nlet enhancer;\n\nif (process.env.NODE_ENV === \"production\") {\n  enhancer = applyMiddleware(thunk);\n} else {\n  const logger = require(\"redux-logger\").default;\n\n  const composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n  enhancer = composeEnhancers(applyMiddleware(thunk, logger));\n}\n\nconst configureStore = preloadedState => {\n  console.log(\"we configuring the store?\");\n  console.log(thunk);\n  return createStore(rootReducer, preloadedState, applyMiddleware(thunk));\n};\n\nexport default configureStore;","map":{"version":3,"names":["createStore","combineReducers","applyMiddleware","compose","shareReducer","thunk","rootReducer","share","enhancer","process","env","NODE_ENV","logger","require","default","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","configureStore","preloadedState","console","log"],"sources":["/Users/postgres/Desktop/Tea/teafrontend/src/store/index.js"],"sourcesContent":["import { createStore, combineReducers, applyMiddleware, compose } from 'redux'\nimport  shareReducer  from './share';\nimport  thunk from 'redux-thunk';\n\n\nconst rootReducer = combineReducers ({\n  share: shareReducer,\n})\n\n// let enhancer;\n\n// if (process.env.NODE_ENV === \"production\") {\n//   enhancer = applyMiddleware(thunk);\n// } else {\n//   const logger = require(\"redux-logger\").default;\n//   const composeEnhancers =\n//     window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n//   enhancer = composeEnhancers(applyMiddleware(thunk,logger));\n// }\n\nlet enhancer;\n\nif (process.env.NODE_ENV === \"production\") {\n  enhancer = applyMiddleware(thunk);\n} else {\n  const logger = require(\"redux-logger\").default;\n  const composeEnhancers =\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n  enhancer = composeEnhancers(applyMiddleware(thunk, logger));\n}\n\nconst configureStore = (preloadedState) => {\n  console.log(\"we configuring the store?\")\n  console.log(thunk)\n  return createStore(rootReducer, preloadedState, applyMiddleware(thunk))\n};\n\nexport default configureStore;\n"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,eAAvC,EAAwDC,OAAxD,QAAuE,OAAvE;AACA,OAAQC,YAAR,MAA2B,SAA3B;AACA,OAAQC,KAAR,MAAmB,aAAnB;AAGA,MAAMC,WAAW,GAAGL,eAAe,CAAE;EACnCM,KAAK,EAAEH;AAD4B,CAAF,CAAnC,C,CAIA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,IAAII,QAAJ;;AAEA,IAAIC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAA7B,EAA2C;EACzCH,QAAQ,GAAGN,eAAe,CAACG,KAAD,CAA1B;AACD,CAFD,MAEO;EACL,MAAMO,MAAM,GAAGC,OAAO,CAAC,cAAD,CAAP,CAAwBC,OAAvC;;EACA,MAAMC,gBAAgB,GACpBC,MAAM,CAACC,oCAAP,IAA+Cd,OADjD;EAEAK,QAAQ,GAAGO,gBAAgB,CAACb,eAAe,CAACG,KAAD,EAAQO,MAAR,CAAhB,CAA3B;AACD;;AAED,MAAMM,cAAc,GAAIC,cAAD,IAAoB;EACzCC,OAAO,CAACC,GAAR,CAAY,2BAAZ;EACAD,OAAO,CAACC,GAAR,CAAYhB,KAAZ;EACA,OAAOL,WAAW,CAACM,WAAD,EAAca,cAAd,EAA8BjB,eAAe,CAACG,KAAD,CAA7C,CAAlB;AACD,CAJD;;AAMA,eAAea,cAAf"},"metadata":{},"sourceType":"module"}