{"ast":null,"code":"export const restoreCSRF = async () => {\n  const result = await csrfFetch(\"/api/session\");\n  const token = response.headers.get(\"X-CSRF-Token\");\n  if (token) sessionStorage.setItem(\"X-CSRF-Token\", token);\n  let data = await result.json();\n  restoreCurrentUser(data);\n  return data;\n};\nexport const restoreCurrentUser = response => {\n  console.log(response);\n};\n\nconst csrfFetch = async function (url) {\n  let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  options.method ||= \"GET\";\n  options.headers ||= {};\n\n  if (options.method.toUpperCase() !== \"GET\") {\n    options.headers[\"Content-Type\"] = \"application/json\";\n    options.headers[\"Accept\"] = \"application/json\";\n    options.headers[\"X-CSRF-Token\"] = sessionStorage.getItem(\"X-CSRF-Token\");\n  }\n\n  const res = await fetch(url, options);\n  if (res.status >= 400) throw res;\n  return res;\n};\n\nexport default csrfFetch;","map":{"version":3,"names":["restoreCSRF","result","csrfFetch","token","response","headers","get","sessionStorage","setItem","data","json","restoreCurrentUser","console","log","url","options","method","toUpperCase","getItem","res","fetch","status"],"sources":["/Users/postgres/Desktop/Tea/teafrontend/src/store/csrf.js"],"sourcesContent":["export const restoreCSRF = async () => {\n  const result = await csrfFetch(\"/api/session\");\n    const token = response.headers.get(\"X-CSRF-Token\");\n    if (token) sessionStorage.setItem(\"X-CSRF-Token\", token);\n  let data = await result.json();\n  restoreCurrentUser(data);\n  return data;\n};\n\nexport const restoreCurrentUser = (response) => {\n  console.log(response);\n\n  \n};\n\n\n\n\n\n\n\nconst csrfFetch = async (url, options = {}) => {\n  options.method ||= \"GET\";\n  options.headers ||= {};\n\n  if (options.method.toUpperCase() !== \"GET\") {\n    options.headers[\"Content-Type\"] = \"application/json\";\n    options.headers[\"Accept\"] = \"application/json\";\n    options.headers[\"X-CSRF-Token\"] = sessionStorage.getItem(\"X-CSRF-Token\");\n  }\n  const res = await fetch(url, options);\n  if (res.status >= 400) throw res;\n  return res;\n};\n\nexport default csrfFetch;\n"],"mappings":"AAAA,OAAO,MAAMA,WAAW,GAAG,YAAY;EACrC,MAAMC,MAAM,GAAG,MAAMC,SAAS,CAAC,cAAD,CAA9B;EACE,MAAMC,KAAK,GAAGC,QAAQ,CAACC,OAAT,CAAiBC,GAAjB,CAAqB,cAArB,CAAd;EACA,IAAIH,KAAJ,EAAWI,cAAc,CAACC,OAAf,CAAuB,cAAvB,EAAuCL,KAAvC;EACb,IAAIM,IAAI,GAAG,MAAMR,MAAM,CAACS,IAAP,EAAjB;EACAC,kBAAkB,CAACF,IAAD,CAAlB;EACA,OAAOA,IAAP;AACD,CAPM;AASP,OAAO,MAAME,kBAAkB,GAAIP,QAAD,IAAc;EAC9CQ,OAAO,CAACC,GAAR,CAAYT,QAAZ;AAGD,CAJM;;AAYP,MAAMF,SAAS,GAAG,gBAAOY,GAAP,EAA6B;EAAA,IAAjBC,OAAiB,uEAAP,EAAO;EAC7CA,OAAO,CAACC,MAAR,KAAmB,KAAnB;EACAD,OAAO,CAACV,OAAR,KAAoB,EAApB;;EAEA,IAAIU,OAAO,CAACC,MAAR,CAAeC,WAAf,OAAiC,KAArC,EAA4C;IAC1CF,OAAO,CAACV,OAAR,CAAgB,cAAhB,IAAkC,kBAAlC;IACAU,OAAO,CAACV,OAAR,CAAgB,QAAhB,IAA4B,kBAA5B;IACAU,OAAO,CAACV,OAAR,CAAgB,cAAhB,IAAkCE,cAAc,CAACW,OAAf,CAAuB,cAAvB,CAAlC;EACD;;EACD,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAACN,GAAD,EAAMC,OAAN,CAAvB;EACA,IAAII,GAAG,CAACE,MAAJ,IAAc,GAAlB,EAAuB,MAAMF,GAAN;EACvB,OAAOA,GAAP;AACD,CAZD;;AAcA,eAAejB,SAAf"},"metadata":{},"sourceType":"module"}