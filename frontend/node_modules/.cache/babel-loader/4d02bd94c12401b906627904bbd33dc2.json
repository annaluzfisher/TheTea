{"ast":null,"code":"import { createStore, combineReducers, applyMiddleware, compose } from 'redux';\nimport shareReducer from './share';\nimport thunk from 'redux-thunk';\nconst rootReducer = combineReducers({\n  share: shareReducer\n}); // let enhancer;\n// if (process.env.NODE_ENV === \"production\") {\n//   enhancer = applyMiddleware(thunk);\n// } else {\n//   const logger = require(\"redux-logger\").default;\n//   const composeEnhancers =\n//     window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n//   enhancer = composeEnhancers(applyMiddleware(thunk,logger));\n// }\n\nconst configureStore = preloadedState => {\n  return createStore(rootReducer, preloadedState, applyMiddlethunk);\n};\n\nexport default configureStore;","map":{"version":3,"names":["createStore","combineReducers","applyMiddleware","compose","shareReducer","thunk","rootReducer","share","configureStore","preloadedState","applyMiddlethunk"],"sources":["/Users/postgres/Desktop/Tea/teafrontend/src/store/index.js"],"sourcesContent":["import { createStore, combineReducers, applyMiddleware, compose } from 'redux'\nimport  shareReducer  from './share'\nimport  thunk  from 'redux-thunk';\n\n\nconst rootReducer = combineReducers ({\n  share: shareReducer\n})\n\n// let enhancer;\n\n// if (process.env.NODE_ENV === \"production\") {\n//   enhancer = applyMiddleware(thunk);\n// } else {\n//   const logger = require(\"redux-logger\").default;\n//   const composeEnhancers =\n//     window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n//   enhancer = composeEnhancers(applyMiddleware(thunk,logger));\n// }\n\nconst configureStore = (preloadedState) => {\n  return createStore(rootReducer, preloadedState, applyMiddlethunk);\n};\n\nexport default configureStore;\n"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,eAAvC,EAAwDC,OAAxD,QAAuE,OAAvE;AACA,OAAQC,YAAR,MAA2B,SAA3B;AACA,OAAQC,KAAR,MAAoB,aAApB;AAGA,MAAMC,WAAW,GAAGL,eAAe,CAAE;EACnCM,KAAK,EAAEH;AAD4B,CAAF,CAAnC,C,CAIA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMI,cAAc,GAAIC,cAAD,IAAoB;EACzC,OAAOT,WAAW,CAACM,WAAD,EAAcG,cAAd,EAA8BC,gBAA9B,CAAlB;AACD,CAFD;;AAIA,eAAeF,cAAf"},"metadata":{},"sourceType":"module"}