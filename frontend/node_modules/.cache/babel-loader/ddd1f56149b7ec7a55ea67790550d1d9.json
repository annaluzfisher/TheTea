{"ast":null,"code":"import { createStore, combineReducers, applyMiddleware, compose } from 'redux';\nimport shareReducer from './share';\nimport thunk from 'redux-thunk';\nimport { sessionReducer } from './sessionReducer';\nimport userReducer from './user';\nimport uiReducer from './ui';\nconst rootReducer = combineReducers({\n  share: shareReducer,\n  session: sessionReducer,\n  user: userReducer,\n  ui: uiReducer,\n  modals: modals\n});\nlet enhancer;\n\nif (process.env.NODE_ENV === \"production\") {\n  enhancer = applyMiddleware(thunk);\n} else {\n  const logger = require(\"redux-logger\").default;\n\n  const composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n  enhancer = composeEnhancers(applyMiddleware(thunk, logger));\n}\n\nconst configureStore = preloadedState => {\n  return createStore(rootReducer, preloadedState, enhancer);\n};\n\nexport default configureStore;","map":{"version":3,"names":["createStore","combineReducers","applyMiddleware","compose","shareReducer","thunk","sessionReducer","userReducer","uiReducer","rootReducer","share","session","user","ui","modals","enhancer","process","env","NODE_ENV","logger","require","default","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","configureStore","preloadedState"],"sources":["/Users/postgres/Desktop/Tea/teafrontend/src/store/index.js"],"sourcesContent":["import { createStore, combineReducers, applyMiddleware, compose } from 'redux'\nimport  shareReducer  from './share';\nimport  thunk from 'redux-thunk';\nimport { sessionReducer } from './sessionReducer';\nimport  userReducer  from './user'\nimport uiReducer from './ui';\n\nconst rootReducer = combineReducers ({\n  share: shareReducer,\n  session: sessionReducer,\n  user: userReducer,\n  ui: uiReducer,\n  modals: modals\n})\n\n\n\nlet enhancer;\n\nif (process.env.NODE_ENV === \"production\") {\n  enhancer = applyMiddleware(thunk);\n} else {\n  const logger = require(\"redux-logger\").default;\n  const composeEnhancers =\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n  enhancer = composeEnhancers(applyMiddleware(thunk, logger));\n}\n\n\nconst configureStore = (preloadedState) => {\n  return createStore(rootReducer, preloadedState, enhancer)\n};\n\nexport default configureStore;\n"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,eAAvC,EAAwDC,OAAxD,QAAuE,OAAvE;AACA,OAAQC,YAAR,MAA2B,SAA3B;AACA,OAAQC,KAAR,MAAmB,aAAnB;AACA,SAASC,cAAT,QAA+B,kBAA/B;AACA,OAAQC,WAAR,MAA0B,QAA1B;AACA,OAAOC,SAAP,MAAsB,MAAtB;AAEA,MAAMC,WAAW,GAAGR,eAAe,CAAE;EACnCS,KAAK,EAAEN,YAD4B;EAEnCO,OAAO,EAAEL,cAF0B;EAGnCM,IAAI,EAAEL,WAH6B;EAInCM,EAAE,EAAEL,SAJ+B;EAKnCM,MAAM,EAAEA;AAL2B,CAAF,CAAnC;AAUA,IAAIC,QAAJ;;AAEA,IAAIC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAA7B,EAA2C;EACzCH,QAAQ,GAAGb,eAAe,CAACG,KAAD,CAA1B;AACD,CAFD,MAEO;EACL,MAAMc,MAAM,GAAGC,OAAO,CAAC,cAAD,CAAP,CAAwBC,OAAvC;;EACA,MAAMC,gBAAgB,GACpBC,MAAM,CAACC,oCAAP,IAA+CrB,OADjD;EAEAY,QAAQ,GAAGO,gBAAgB,CAACpB,eAAe,CAACG,KAAD,EAAQc,MAAR,CAAhB,CAA3B;AACD;;AAGD,MAAMM,cAAc,GAAIC,cAAD,IAAoB;EACzC,OAAO1B,WAAW,CAACS,WAAD,EAAciB,cAAd,EAA8BX,QAA9B,CAAlB;AACD,CAFD;;AAIA,eAAeU,cAAf"},"metadata":{},"sourceType":"module"}